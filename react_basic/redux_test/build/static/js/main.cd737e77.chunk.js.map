{"version":3,"sources":["redux/constant.js","redux/reducers/person.js","redux/reducers/index.js","redux/reducers/count.js","redux/store.js","redux/action/count.js","containers/Count/index.jsx","containers/Person/index.jsx","redux/action/person.js","App.jsx","index.js"],"names":["INCREMENT","DECREMENT","ADD_PERSON","initState","id","name","age","combineReducers","count","preState","action","type","data","persons","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","createIncrementAction","Count","increment","value","selectNumber","props","decrement","incrementIfOdd","incrementAsync","this","personSum","ref","c","onClick","Component","connect","state","length","time","dispatch","setTimeout","Person","addPerson","nameNode","ageNode","personObj","nanoid","addOnePerson","sum","placeholder","personArr","map","p","App","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.cd737e77.chunk.js","sourcesContent":["/* \r\n该模块适用于定义action对象中type类型的常量值,便于管理的同时防止单词写错\r\n*/\r\n\r\nexport const INCREMENT = 'increment'\r\nexport const DECREMENT = 'decrement'\r\nexport const ADD_PERSON = 'add_person'","import { ADD_PERSON } from \"../constant\"\r\n\r\n//reducer 初始化状态和加工状态\r\nconst initState = [{id:'001',name:'tom',age:18}]\r\nexport default function personReducer(preState=initState,action){\r\n    const {type,data} = action\r\n    switch(type){\r\n        case ADD_PERSON:\r\n            // preState.unshift(data)//此处一定不要这样写，这样会导致preState被改写，就不符合纯函数规则\r\n            return [data,...preState]\r\n        default:\r\n            return preState\r\n    }\r\n}\r\n","/* \r\n该文件用于汇总所有的reducer，成为一个总的reducer\r\n*/\r\nimport {combineReducers} from 'redux'\r\n// 引入为Count组件服务的reducer\r\nimport countReducer from './count'\r\nimport personReducer from './person'\r\n\r\n//汇总所有的reducers\r\nexport default combineReducers({\r\n    count:countReducer,\r\n    persons:personReducer\r\n})","/* ***********重要！ */\r\n\r\n/* \r\n 1、该文件用于创建一个为Count组件服务的reducer，reducer的本质就是一个函数\r\n 2、reducer函数会接到两个参数，分别为：之前的状态（preState），动作对象（Action）\r\n */\r\n import {INCREMENT,DECREMENT} from '../constant'\r\n\r\nconst initState = 0 //初始化组件的状态\r\nexport default function countReducer(preState = initState,action){\r\n    // console.log(preState)\r\n    //action对象中获取：type，data\r\n    const {type,data} = action\r\n    switch(type){\r\n        case INCREMENT:\r\n            return preState + data\r\n        case DECREMENT:\r\n            return preState - data\r\n        default:\r\n            return preState\r\n    }\r\n}\r\n","/* \r\n该文件专门用于暴露一个store对象，整个应用只有一个store对象，所以可以采用默认暴露\r\n */\r\n\r\n//引入creteStore ，专门用于创建redux中最为核心的store对象\r\nimport {createStore,applyMiddleware} from 'redux'\r\n//引入redux-thunk 用于支持异步action\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport reducers from './reducers'\r\n\r\n\r\n\r\n// 暴露store\r\nexport default createStore(reducers,composeWithDevTools(applyMiddleware(thunk)))","/* \r\n该文件专门为count组件生成action对象\r\n*/\r\nimport {INCREMENT,DECREMENT} from '../constant'\r\n\r\nexport const createIncrementAction = data => ({type:INCREMENT,data})\r\nexport const createDecrementAction = data => ({type:DECREMENT,data})\r\n//所谓的异步action，就是指action的值是函数\r\n// 异步action中一般都会调用同步action，异步action不是必须要用的\r\nexport const createIncrementAsyncAction =(data,time)=>{\r\n    return (dispatch)=>{\r\n        setTimeout(() => {\r\n            dispatch(createIncrementAction(data))\r\n        }, time);\r\n    }\r\n}","import React ,{Component} from 'react'\r\n//引入connect用于连接UI组件与redux\r\nimport {connect} from 'react-redux'\r\nimport {createDecrementAction, createIncrementAction, createIncrementAsyncAction} from '../../redux/action/count'\r\n\r\n//定义UI组件\r\nclass Count extends Component {\r\n\r\n    //加法\r\n    increment= ()=>{\r\n        const {value} = this.selectNumber\r\n        this.props.increment(value*1)\r\n    }\r\n    //减法\r\n    decrement= ()=>{\r\n        const {value} = this.selectNumber\r\n        this.props.decrement(value*1)\r\n    }\r\n    // 奇数再加\r\n    incrementIfOdd= ()=>{\r\n        const {value} = this.selectNumber\r\n        if(this.props.count % 2 !== 0){\r\n            this.props.increment(value*1)\r\n        }\r\n    }\r\n    // 异步相加\r\n    incrementAsync= ()=>{\r\n        const {value} = this.selectNumber\r\n        this.props.incrementAsync(value*1,1000)\r\n    }\r\n\r\n    render() {\r\n        // console.log('ui组件接收：' ,this.props)\r\n        return (\r\n            <div>\r\n                <h2>Count组件</h2>\r\n                <h4>当前求和为：{this.props.count} Person组件中的总人数为：{this.props.personSum}</h4>\r\n                <select ref={c => this.selectNumber = c}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                </select>&nbsp;\r\n                <button onClick={this.increment}>+</button>&nbsp;&nbsp;\r\n                <button onClick={this.decrement}>-</button>&nbsp;&nbsp;\r\n                <button onClick={this.incrementIfOdd}>incrementIfOdd</button>&nbsp;&nbsp;\r\n                <button onClick={this.incrementAsync}>increment async</button>&nbsp;&nbsp;\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({count:state.count,personSum:state.persons.length}),//redux现在是一个对象\r\n\r\n   //mapDispatch的简写\r\n    {\r\n        increment:createIncrementAction,\r\n        decrement:createDecrementAction,\r\n        incrementAsync:createIncrementAsyncAction\r\n    }\r\n)(Count)\r\n","import { nanoid } from 'nanoid'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {createAddPersonAction} from '../../redux/action/person'\r\n\r\nclass Person extends Component {\r\n\r\n    addPerson = ()=>{\r\n        const name = this.nameNode.value\r\n        const age = this.ageNode.value\r\n        const personObj = {id:nanoid(),name,age}\r\n        this.props.addOnePerson(personObj)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Person组件</h2>\r\n                <h4>Count组件的求和为：{this.props.sum}</h4>\r\n                <input ref={c=>this.nameNode = c} type=\"text\" placeholder=\"输入姓名\"/>&nbsp;&nbsp;\r\n                <input ref={c=>this.ageNode = c} type=\"text\" placeholder=\"输入年龄\"/>&nbsp;&nbsp;\r\n                <button onClick={this.addPerson}>添加</button>\r\n                <ul>\r\n                    {\r\n                        this.props.personArr.map((p)=>{\r\n                            return <li key={p.id}>{p.name}---{p.age}</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state=>({personArr:state.persons,sum:state.count}),//状态\r\n    {\r\n        addOnePerson:createAddPersonAction\r\n    }\r\n)(Person)","import {ADD_PERSON} from '../constant'\r\n\r\nexport const createAddPersonAction = personObj => ({type:ADD_PERSON,data:personObj})","import React, { Component } from 'react'\r\nimport Count from './containers/Count'\r\nimport Person from './containers/Person'\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            //给容器组件传递store\r\n            <div>\r\n                <Count/>\r\n                <hr/>\r\n                <Person/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport store from './redux/store'\r\nimport {Provider} from 'react-redux'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App/>\r\n</Provider>,\r\ndocument.getElementById('root'))\r\n"],"sourceRoot":""}